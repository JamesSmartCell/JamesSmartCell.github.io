"use strict";

/**
 * Example JavaScript code that interacts with the page and Web3 wallets
 */

 // Unpkg imports
const Web3Modal = window.Web3Modal.default;
const WalletConnectProvider = window.WalletConnectProvider.default;
const Fortmatic = window.Fortmatic;
const evmChains = window.evmChains;

// Web3modal instance
let web3Modal

// Chosen wallet provider given by the dialog window
let provider;


// Address of the selected account
let selectedAccount;

const abi = [
	{
		"inputs": [],
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "owner",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "address",
				"name": "approved",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			}
		],
		"name": "Approval",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "owner",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "address",
				"name": "operator",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "bool",
				"name": "approved",
				"type": "bool"
			}
		],
		"name": "ApprovalForAll",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"internalType": "address",
				"name": "burner",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			}
		],
		"name": "Burn",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "from",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "address",
				"name": "to",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			}
		],
		"name": "Transfer",
		"type": "event"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "to",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			}
		],
		"name": "approve",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "owner",
				"type": "address"
			}
		],
		"name": "balanceOf",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			}
		],
		"name": "burn",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "endContract",
		"outputs": [],
		"stateMutability": "payable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			}
		],
		"name": "getApproved",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "owner",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "operator",
				"type": "address"
			}
		],
		"name": "isApprovedForAll",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "mintUsingSequentialTokenId",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "name",
		"outputs": [
			{
				"internalType": "string",
				"name": "",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			}
		],
		"name": "ownerOf",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "from",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "to",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			}
		],
		"name": "safeTransferFrom",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "from",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "to",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			},
			{
				"internalType": "bytes",
				"name": "_data",
				"type": "bytes"
			}
		],
		"name": "safeTransferFrom",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "operator",
				"type": "address"
			},
			{
				"internalType": "bool",
				"name": "approved",
				"type": "bool"
			}
		],
		"name": "setApprovalForAll",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "bytes4",
				"name": "interfaceId",
				"type": "bytes4"
			}
		],
		"name": "supportsInterface",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "pure",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "symbol",
		"outputs": [
			{
				"internalType": "string",
				"name": "",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			}
		],
		"name": "tokenURI",
		"outputs": [
			{
				"internalType": "string",
				"name": "",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "from",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "to",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			}
		],
		"name": "transferFrom",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	}
];

	const bytecodePunks = "60806040523480156200001157600080fd5b506040805180820190915260148082527f4d6573736167652057726974657220546f6b656e00000000000000000000000060209092019182526200005891600191620002c3565b50604080518082019091526003808252624d534760e81b60209092019182526200008591600291620002c3565b50600080546001600160a01b031916331790556001600355620000a7620000ae565b50620003f5565b600080546001600160a01b0316331480620000d757503360009081526005602052604090205415155b620001295760405162461bcd60e51b815260206004820152601b60248201527f4e65656420746f206f776e206120746f6b656e20746f206d696e74000000000060448201526064015b60405180910390fd5b506003805490819060006200013e836200037f565b90915550620001509050338262000153565b90565b6001600160a01b038216620001c15760405162461bcd60e51b815260206004820152602d60248201527f4174746573746174696f6e4d696e7461626c653a206d696e7420746f2074686560448201526c207a65726f206164647265737360981b606482015260840162000120565b6000818152600460205260409020546001600160a01b0316156200023a5760405162461bcd60e51b815260206004820152602960248201527f4174746573746174696f6e4d696e7461626c653a20746f6b656e20616c726561604482015268191e481b5a5b9d195960ba1b606482015260840162000120565b6001600160a01b0382166000908152600560205260408120805460019290620002659084906200039d565b909155505060008181526004602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054620002d190620003b8565b90600052602060002090601f016020900481019282620002f5576000855562000340565b82601f106200031057805160ff191683800117855562000340565b8280016001018555821562000340579182015b828111156200034057825182559160200191906001019062000323565b506200034e92915062000352565b5090565b5b808211156200034e576000815560010162000353565b634e487b7160e01b600052601160045260246000fd5b600060001982141562000396576200039662000369565b5060010190565b60008219821115620003b357620003b362000369565b500190565b600181811c90821680620003cd57607f821691505b60208210811415620003ef57634e487b7160e01b600052602260045260246000fd5b50919050565b6117c280620004056000396000f3fe6080604052600436106100f35760003560e01c806370a082311161008a578063b88d4fde11610059578063b88d4fde146102a1578063bb6e7de9146102c1578063c87b56dd146102c9578063e985e9c5146102e957600080fd5b806370a082311461022957806395d89b4114610257578063985e49f41461026c578063a22cb4651461028157600080fd5b806323b872dd116100c657806323b872dd146101a957806342842e0e146101c957806342966c68146101e95780636352211e1461020957600080fd5b806301ffc9a7146100f857806306fdde031461012d578063081812fc1461014f578063095ea7b314610187575b600080fd5b34801561010457600080fd5b5061011861011336600461121c565b610332565b60405190151581526020015b60405180910390f35b34801561013957600080fd5b50610142610384565b6040516101249190611298565b34801561015b57600080fd5b5061016f61016a3660046112ab565b610416565b6040516001600160a01b039091168152602001610124565b34801561019357600080fd5b506101a76101a23660046112e0565b6104bd565b005b3480156101b557600080fd5b506101a76101c436600461130a565b6105ee565b3480156101d557600080fd5b506101a76101e436600461130a565b610620565b3480156101f557600080fd5b506101a76102043660046112ab565b61063b565b34801561021557600080fd5b5061016f6102243660046112ab565b61072f565b34801561023557600080fd5b50610249610244366004611346565b6107b3565b604051908152602001610124565b34801561026357600080fd5b5061014261084d565b34801561027857600080fd5b5061024961085c565b34801561028d57600080fd5b506101a761029c366004611361565b6108f5565b3480156102ad57600080fd5b506101a76102bc3660046113b3565b6109c9565b6101a7610a01565b3480156102d557600080fd5b506101426102e43660046112ab565b610a22565b3480156102f557600080fd5b5061011861030436600461148f565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166301ffc9a760e01b148061036357506001600160e01b03198216635b5e139f60e01b145b8061037e57506001600160e01b031982166380ac58cd60e01b145b92915050565b606060018054610393906114c2565b80601f01602080910402602001604051908101604052809291908181526020018280546103bf906114c2565b801561040c5780601f106103e15761010080835404028352916020019161040c565b820191906000526020600020905b8154815290600101906020018083116103ef57829003601f168201915b5050505050905090565b6000818152600460205260408120546001600160a01b03166104a15760405162461bcd60e51b815260206004820152603960248201527f4174746573746174696f6e4d696e7461626c653a20617070726f76656420717560448201527832b93c903337b9103737b732bc34b9ba32b73a103a37b5b2b760391b60648201526084015b60405180910390fd5b506000908152600660205260409020546001600160a01b031690565b60006104c88261072f565b9050806001600160a01b0316836001600160a01b031614156105435760405162461bcd60e51b815260206004820152602e60248201527f4174746573746174696f6e4d696e7461626c653a20617070726f76616c20746f60448201526d1031bab93932b73a1037bbb732b960911b6064820152608401610498565b336001600160a01b038216148061055f575061055f8133610304565b6105df5760405162461bcd60e51b815260206004820152604560248201527f4174746573746174696f6e4d696e7461626c653a20617070726f76652063616c60448201527f6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f6064820152641c88185b1b60da1b608482015260a401610498565b6105e98383610aa2565b505050565b6105f9335b82610b10565b6106155760405162461bcd60e51b8152600401610498906114fd565b6105e9838383610c14565b6105e9838383604051806020016040528060008152506109c9565b6000818152600460205260409020546001600160a01b031661066f5760405162461bcd60e51b81526004016104989061155a565b610678336105f3565b6106ea5760405162461bcd60e51b815260206004820152603a60248201527f4174746573746174696f6e4d696e7461626c653a204275726e2063616c6c657260448201527f206973206e6f74206f776e6572206e6f7220617070726f7665640000000000006064820152608401610498565b6106f381610dcf565b60408051338152602081018390527fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5910160405180910390a150565b6000818152600460205260408120546001600160a01b03168061037e5760405162461bcd60e51b815260206004820152603660248201527f4174746573746174696f6e4d696e7461626c653a206f776e6572207175657279604482015275103337b9103737b732bc34b9ba32b73a103a37b5b2b760511b6064820152608401610498565b60006001600160a01b0382166108315760405162461bcd60e51b815260206004820152603760248201527f4174746573746174696f6e4d696e7461626c653a2062616c616e63652071756560448201527f727920666f7220746865207a65726f20616464726573730000000000000000006064820152608401610498565b506001600160a01b031660009081526005602052604090205490565b606060028054610393906114c2565b600080546001600160a01b031633148061088457503360009081526005602052604090205415155b6108d05760405162461bcd60e51b815260206004820152601b60248201527f4e65656420746f206f776e206120746f6b656e20746f206d696e7400000000006044820152606401610498565b506003805490819060006108e3836115c4565b91905055506108f23382610e6a565b90565b6001600160a01b03821633141561095d5760405162461bcd60e51b815260206004820152602660248201527f4174746573746174696f6e4d696e7461626c653a20617070726f766520746f2060448201526531b0b63632b960d11b6064820152608401610498565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6109d33383610b10565b6109ef5760405162461bcd60e51b8152600401610498906114fd565b6109fb84848484610fd4565b50505050565b6000546001600160a01b03163314156100f3576000546001600160a01b0316ff5b6000818152600460205260409020546060906001600160a01b0316610a595760405162461bcd60e51b81526004016104989061155a565b60405180608001604052806044815260200161174960449139610a7b83611007565b604051602001610a8c9291906115df565b6040516020818303038152906040529050919050565b600081815260066020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610ad78261072f565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600460205260408120546001600160a01b0316610b965760405162461bcd60e51b815260206004820152603960248201527f4174746573746174696f6e4d696e7461626c653a206f70657261746f7220717560448201527832b93c903337b9103737b732bc34b9ba32b73a103a37b5b2b760391b6064820152608401610498565b6000610ba18361072f565b9050806001600160a01b0316846001600160a01b03161480610bdc5750836001600160a01b0316610bd184610416565b6001600160a01b0316145b80610c0c57506001600160a01b0380821660009081526007602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316610c278261072f565b6001600160a01b031614610c9c5760405162461bcd60e51b815260206004820152603660248201527f4174746573746174696f6e4d696e7461626c653a207472616e73666572206f66604482015275103a37b5b2b7103a3430ba1034b9903737ba1037bbb760511b6064820152608401610498565b6001600160a01b038216610d0c5760405162461bcd60e51b815260206004820152603160248201527f4174746573746174696f6e4d696e7461626c653a207472616e7366657220746f60448201527020746865207a65726f206164647265737360781b6064820152608401610498565b610d17600082610aa2565b6001600160a01b0383166000908152600560205260408120805460019290610d4090849061160e565b90915550506001600160a01b0382166000908152600560205260408120805460019290610d6e908490611625565b909155505060008181526004602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000610dda8261072f565b9050610de7600083610aa2565b6001600160a01b0381166000908152600560205260408120805460019290610e1090849061160e565b909155505060008281526004602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6001600160a01b038216610ed65760405162461bcd60e51b815260206004820152602d60248201527f4174746573746174696f6e4d696e7461626c653a206d696e7420746f2074686560448201526c207a65726f206164647265737360981b6064820152608401610498565b6000818152600460205260409020546001600160a01b031615610f4d5760405162461bcd60e51b815260206004820152602960248201527f4174746573746174696f6e4d696e7461626c653a20746f6b656e20616c726561604482015268191e481b5a5b9d195960ba1b6064820152608401610498565b6001600160a01b0382166000908152600560205260408120805460019290610f76908490611625565b909155505060008181526004602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b610fdf848484610c14565b610feb84848484611105565b6109fb5760405162461bcd60e51b81526004016104989061163d565b60608161102b5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611055578061103f816115c4565b915061104e9050600a836116b0565b915061102f565b60008167ffffffffffffffff8111156110705761107061139d565b6040519080825280601f01601f19166020018201604052801561109a576020820181803683370190505b5090505b8415610c0c576110af60018361160e565b91506110bc600a866116c4565b6110c7906030611625565b60f81b8183815181106110dc576110dc6116d8565b60200101906001600160f81b031916908160001a9053506110fe600a866116b0565b945061109e565b60006001600160a01b0384163b156111f857604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906111499033908990889088906004016116ee565b6020604051808303816000875af1925050508015611184575060408051601f3d908101601f191682019092526111819181019061172b565b60015b6111de573d8080156111b2576040519150601f19603f3d011682016040523d82523d6000602084013e6111b7565b606091505b5080516111d65760405162461bcd60e51b81526004016104989061163d565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610c0c565b506001949350505050565b6001600160e01b03198116811461121957600080fd5b50565b60006020828403121561122e57600080fd5b813561123981611203565b9392505050565b60005b8381101561125b578181015183820152602001611243565b838111156109fb5750506000910152565b60008151808452611284816020860160208601611240565b601f01601f19169290920160200192915050565b602081526000611239602083018461126c565b6000602082840312156112bd57600080fd5b5035919050565b80356001600160a01b03811681146112db57600080fd5b919050565b600080604083850312156112f357600080fd5b6112fc836112c4565b946020939093013593505050565b60008060006060848603121561131f57600080fd5b611328846112c4565b9250611336602085016112c4565b9150604084013590509250925092565b60006020828403121561135857600080fd5b611239826112c4565b6000806040838503121561137457600080fd5b61137d836112c4565b91506020830135801515811461139257600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156113c957600080fd5b6113d2856112c4565b93506113e0602086016112c4565b925060408501359150606085013567ffffffffffffffff8082111561140457600080fd5b818701915087601f83011261141857600080fd5b81358181111561142a5761142a61139d565b604051601f8201601f19908116603f011681019083821181831017156114525761145261139d565b816040528281528a602084870101111561146b57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156114a257600080fd5b6114ab836112c4565b91506114b9602084016112c4565b90509250929050565b600181811c908216806114d657607f821691505b602082108114156114f757634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252603e908201527f4174746573746174696f6e4d696e7461626c653a207472616e7366657220636160408201527f6c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665640000606082015260800190565b60208082526034908201527f4174746573746174696f6e4d696e7461626c653a20555249207175657279206660408201527337b9103737b732bc34b9ba32b73a103a37b5b2b760611b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60006000198214156115d8576115d86115ae565b5060010190565b600083516115f1818460208801611240565b835190830190611605818360208801611240565b01949350505050565b600082821015611620576116206115ae565b500390565b60008219821115611638576116386115ae565b500190565b6020808252603f908201527f4174746573746174696f6e4d696e7461626c653a207472616e7366657220746f60408201527f206e6f6e20455243373231526563656976657220696d706c656d656e74657200606082015260800190565b634e487b7160e01b600052601260045260246000fd5b6000826116bf576116bf61169a565b500490565b6000826116d3576116d361169a565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906117219083018461126c565b9695505050505050565b60006020828403121561173d57600080fd5b81516112398161120356fe68747470733a2f2f697066732e696f2f697066732f516d65536a53696e4870506e6d586d73704d6a776958794e367a533445397a63636172694752336a7863615774712fa2646970667358221220c5f38e0a811fcaac69a5048d5e82f7dbc66d76b2f7523f6e8ed95cd3b9d3712064736f6c634300080a0033"

	const bytecodeMeks = "60806040523480156200001157600080fd5b506040805180820190915260148082527f4d6573736167652057726974657220546f6b656e00000000000000000000000060209092019182526200005891600191620002c3565b50604080518082019091526003808252624d534760e81b60209092019182526200008591600291620002c3565b50600080546001600160a01b031916331790556001600355620000a7620000ae565b50620003f5565b600080546001600160a01b0316331480620000d757503360009081526005602052604090205415155b620001295760405162461bcd60e51b815260206004820152601b60248201527f4e65656420746f206f776e206120746f6b656e20746f206d696e74000000000060448201526064015b60405180910390fd5b506003805490819060006200013e836200037f565b90915550620001509050338262000153565b90565b6001600160a01b038216620001c15760405162461bcd60e51b815260206004820152602d60248201527f4174746573746174696f6e4d696e7461626c653a206d696e7420746f2074686560448201526c207a65726f206164647265737360981b606482015260840162000120565b6000818152600460205260409020546001600160a01b0316156200023a5760405162461bcd60e51b815260206004820152602960248201527f4174746573746174696f6e4d696e7461626c653a20746f6b656e20616c726561604482015268191e481b5a5b9d195960ba1b606482015260840162000120565b6001600160a01b0382166000908152600560205260408120805460019290620002659084906200039d565b909155505060008181526004602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054620002d190620003b8565b90600052602060002090601f016020900481019282620002f5576000855562000340565b82601f106200031057805160ff191683800117855562000340565b8280016001018555821562000340579182015b828111156200034057825182559160200191906001019062000323565b506200034e92915062000352565b5090565b5b808211156200034e576000815560010162000353565b634e487b7160e01b600052601160045260246000fd5b600060001982141562000396576200039662000369565b5060010190565b60008219821115620003b357620003b362000369565b500190565b600181811c90821680620003cd57607f821691505b60208210811415620003ef57634e487b7160e01b600052602260045260246000fd5b50919050565b6117c780620004056000396000f3fe6080604052600436106100f35760003560e01c806370a082311161008a578063b88d4fde11610059578063b88d4fde146102a1578063bb6e7de9146102c1578063c87b56dd146102c9578063e985e9c5146102e957600080fd5b806370a082311461022957806395d89b4114610257578063985e49f41461026c578063a22cb4651461028157600080fd5b806323b872dd116100c657806323b872dd146101a957806342842e0e146101c957806342966c68146101e95780636352211e1461020957600080fd5b806301ffc9a7146100f857806306fdde031461012d578063081812fc1461014f578063095ea7b314610187575b600080fd5b34801561010457600080fd5b5061011861011336600461121c565b610332565b60405190151581526020015b60405180910390f35b34801561013957600080fd5b50610142610384565b6040516101249190611298565b34801561015b57600080fd5b5061016f61016a3660046112ab565b610416565b6040516001600160a01b039091168152602001610124565b34801561019357600080fd5b506101a76101a23660046112e0565b6104bd565b005b3480156101b557600080fd5b506101a76101c436600461130a565b6105ee565b3480156101d557600080fd5b506101a76101e436600461130a565b610620565b3480156101f557600080fd5b506101a76102043660046112ab565b61063b565b34801561021557600080fd5b5061016f6102243660046112ab565b61072f565b34801561023557600080fd5b50610249610244366004611346565b6107b3565b604051908152602001610124565b34801561026357600080fd5b5061014261084d565b34801561027857600080fd5b5061024961085c565b34801561028d57600080fd5b506101a761029c366004611361565b6108f5565b3480156102ad57600080fd5b506101a76102bc3660046113b3565b6109c9565b6101a7610a01565b3480156102d557600080fd5b506101426102e43660046112ab565b610a22565b3480156102f557600080fd5b5061011861030436600461148f565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166301ffc9a760e01b148061036357506001600160e01b03198216635b5e139f60e01b145b8061037e57506001600160e01b031982166380ac58cd60e01b145b92915050565b606060018054610393906114c2565b80601f01602080910402602001604051908101604052809291908181526020018280546103bf906114c2565b801561040c5780601f106103e15761010080835404028352916020019161040c565b820191906000526020600020905b8154815290600101906020018083116103ef57829003601f168201915b5050505050905090565b6000818152600460205260408120546001600160a01b03166104a15760405162461bcd60e51b815260206004820152603960248201527f4174746573746174696f6e4d696e7461626c653a20617070726f76656420717560448201527832b93c903337b9103737b732bc34b9ba32b73a103a37b5b2b760391b60648201526084015b60405180910390fd5b506000908152600660205260409020546001600160a01b031690565b60006104c88261072f565b9050806001600160a01b0316836001600160a01b031614156105435760405162461bcd60e51b815260206004820152602e60248201527f4174746573746174696f6e4d696e7461626c653a20617070726f76616c20746f60448201526d1031bab93932b73a1037bbb732b960911b6064820152608401610498565b336001600160a01b038216148061055f575061055f8133610304565b6105df5760405162461bcd60e51b815260206004820152604560248201527f4174746573746174696f6e4d696e7461626c653a20617070726f76652063616c60448201527f6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f6064820152641c88185b1b60da1b608482015260a401610498565b6105e98383610aa2565b505050565b6105f9335b82610b10565b6106155760405162461bcd60e51b8152600401610498906114fd565b6105e9838383610c14565b6105e9838383604051806020016040528060008152506109c9565b6000818152600460205260409020546001600160a01b031661066f5760405162461bcd60e51b81526004016104989061155a565b610678336105f3565b6106ea5760405162461bcd60e51b815260206004820152603a60248201527f4174746573746174696f6e4d696e7461626c653a204275726e2063616c6c657260448201527f206973206e6f74206f776e6572206e6f7220617070726f7665640000000000006064820152608401610498565b6106f381610dcf565b60408051338152602081018390527fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5910160405180910390a150565b6000818152600460205260408120546001600160a01b03168061037e5760405162461bcd60e51b815260206004820152603660248201527f4174746573746174696f6e4d696e7461626c653a206f776e6572207175657279604482015275103337b9103737b732bc34b9ba32b73a103a37b5b2b760511b6064820152608401610498565b60006001600160a01b0382166108315760405162461bcd60e51b815260206004820152603760248201527f4174746573746174696f6e4d696e7461626c653a2062616c616e63652071756560448201527f727920666f7220746865207a65726f20616464726573730000000000000000006064820152608401610498565b506001600160a01b031660009081526005602052604090205490565b606060028054610393906114c2565b600080546001600160a01b031633148061088457503360009081526005602052604090205415155b6108d05760405162461bcd60e51b815260206004820152601b60248201527f4e65656420746f206f776e206120746f6b656e20746f206d696e7400000000006044820152606401610498565b506003805490819060006108e3836115c4565b91905055506108f23382610e6a565b90565b6001600160a01b03821633141561095d5760405162461bcd60e51b815260206004820152602660248201527f4174746573746174696f6e4d696e7461626c653a20617070726f766520746f2060448201526531b0b63632b960d11b6064820152608401610498565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6109d33383610b10565b6109ef5760405162461bcd60e51b8152600401610498906114fd565b6109fb84848484610fd4565b50505050565b6000546001600160a01b03163314156100f3576000546001600160a01b0316ff5b6000818152600460205260409020546060906001600160a01b0316610a595760405162461bcd60e51b81526004016104989061155a565b60405180608001604052806049815260200161174960499139610a7b83611007565b604051602001610a8c9291906115df565b6040516020818303038152906040529050919050565b600081815260066020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610ad78261072f565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600460205260408120546001600160a01b0316610b965760405162461bcd60e51b815260206004820152603960248201527f4174746573746174696f6e4d696e7461626c653a206f70657261746f7220717560448201527832b93c903337b9103737b732bc34b9ba32b73a103a37b5b2b760391b6064820152608401610498565b6000610ba18361072f565b9050806001600160a01b0316846001600160a01b03161480610bdc5750836001600160a01b0316610bd184610416565b6001600160a01b0316145b80610c0c57506001600160a01b0380821660009081526007602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316610c278261072f565b6001600160a01b031614610c9c5760405162461bcd60e51b815260206004820152603660248201527f4174746573746174696f6e4d696e7461626c653a207472616e73666572206f66604482015275103a37b5b2b7103a3430ba1034b9903737ba1037bbb760511b6064820152608401610498565b6001600160a01b038216610d0c5760405162461bcd60e51b815260206004820152603160248201527f4174746573746174696f6e4d696e7461626c653a207472616e7366657220746f60448201527020746865207a65726f206164647265737360781b6064820152608401610498565b610d17600082610aa2565b6001600160a01b0383166000908152600560205260408120805460019290610d4090849061160e565b90915550506001600160a01b0382166000908152600560205260408120805460019290610d6e908490611625565b909155505060008181526004602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000610dda8261072f565b9050610de7600083610aa2565b6001600160a01b0381166000908152600560205260408120805460019290610e1090849061160e565b909155505060008281526004602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6001600160a01b038216610ed65760405162461bcd60e51b815260206004820152602d60248201527f4174746573746174696f6e4d696e7461626c653a206d696e7420746f2074686560448201526c207a65726f206164647265737360981b6064820152608401610498565b6000818152600460205260409020546001600160a01b031615610f4d5760405162461bcd60e51b815260206004820152602960248201527f4174746573746174696f6e4d696e7461626c653a20746f6b656e20616c726561604482015268191e481b5a5b9d195960ba1b6064820152608401610498565b6001600160a01b0382166000908152600560205260408120805460019290610f76908490611625565b909155505060008181526004602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b610fdf848484610c14565b610feb84848484611105565b6109fb5760405162461bcd60e51b81526004016104989061163d565b60608161102b5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611055578061103f816115c4565b915061104e9050600a836116b0565b915061102f565b60008167ffffffffffffffff8111156110705761107061139d565b6040519080825280601f01601f19166020018201604052801561109a576020820181803683370190505b5090505b8415610c0c576110af60018361160e565b91506110bc600a866116c4565b6110c7906030611625565b60f81b8183815181106110dc576110dc6116d8565b60200101906001600160f81b031916908160001a9053506110fe600a866116b0565b945061109e565b60006001600160a01b0384163b156111f857604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906111499033908990889088906004016116ee565b6020604051808303816000875af1925050508015611184575060408051601f3d908101601f191682019092526111819181019061172b565b60015b6111de573d8080156111b2576040519150601f19603f3d011682016040523d82523d6000602084013e6111b7565b606091505b5080516111d65760405162461bcd60e51b81526004016104989061163d565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610c0c565b506001949350505050565b6001600160e01b03198116811461121957600080fd5b50565b60006020828403121561122e57600080fd5b813561123981611203565b9392505050565b60005b8381101561125b578181015183820152602001611243565b838111156109fb5750506000910152565b60008151808452611284816020860160208601611240565b601f01601f19169290920160200192915050565b602081526000611239602083018461126c565b6000602082840312156112bd57600080fd5b5035919050565b80356001600160a01b03811681146112db57600080fd5b919050565b600080604083850312156112f357600080fd5b6112fc836112c4565b946020939093013593505050565b60008060006060848603121561131f57600080fd5b611328846112c4565b9250611336602085016112c4565b9150604084013590509250925092565b60006020828403121561135857600080fd5b611239826112c4565b6000806040838503121561137457600080fd5b61137d836112c4565b91506020830135801515811461139257600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156113c957600080fd5b6113d2856112c4565b93506113e0602086016112c4565b925060408501359150606085013567ffffffffffffffff8082111561140457600080fd5b818701915087601f83011261141857600080fd5b81358181111561142a5761142a61139d565b604051601f8201601f19908116603f011681019083821181831017156114525761145261139d565b816040528281528a602084870101111561146b57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156114a257600080fd5b6114ab836112c4565b91506114b9602084016112c4565b90509250929050565b600181811c908216806114d657607f821691505b602082108114156114f757634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252603e908201527f4174746573746174696f6e4d696e7461626c653a207472616e7366657220636160408201527f6c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665640000606082015260800190565b60208082526034908201527f4174746573746174696f6e4d696e7461626c653a20555249207175657279206660408201527337b9103737b732bc34b9ba32b73a103a37b5b2b760611b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60006000198214156115d8576115d86115ae565b5060010190565b600083516115f1818460208801611240565b835190830190611605818360208801611240565b01949350505050565b600082821015611620576116206115ae565b500390565b60008219821115611638576116386115ae565b500190565b6020808252603f908201527f4174746573746174696f6e4d696e7461626c653a207472616e7366657220746f60408201527f206e6f6e20455243373231526563656976657220696d706c656d656e74657200606082015260800190565b634e487b7160e01b600052601260045260246000fd5b6000826116bf576116bf61169a565b500490565b6000826116d3576116d361169a565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906117219083018461126c565b9695505050505050565b60006020828403121561173d57600080fd5b81516112398161120356fe68747470733a2f2f697066732e696f2f697066732f516d636f62314d61505458555a74354d7a744845677359687266375236473777563868706377654c386e456667552f6d656b612fa26469706673582212203f4258111539d93809c58b6d2102a3df8b5be1aafaff8350e00f5701ad72b2c364736f6c634300080a0033"

/**
 * Setup the orchestra
 */
function init() {

  console.log("Initializing example");
  console.log("WalletConnectProvider is", WalletConnectProvider);
  console.log("Fortmatic is", Fortmatic);
  console.log("window.web3 is", window.web3, "window.ethereum is", window.ethereum);
  document.querySelector("#btn-disconnect").setAttribute("disabled", "disabled");

  document.querySelector("#btn-disconnect").style.display = "enabled";
  //document.querySelector("#connected").style.display = "block";

  // Check that the web page is run in a secure context,
  // as otherwise MetaMask won't be available
  /*if(location.protocol !== 'https:') {
    // https://ethereum.stackexchange.com/a/62217/620
    const alert = document.querySelector("#alert-error-https");
    alert.style.display = "block";
    document.querySelector("#btn-connect").setAttribute("disabled", "disabled")
    return;
  }*/

  // Tell Web3modal what providers we have available.
  // Built-in web browser provider (only one can exist as a time)
  // like MetaMask, Brave or Opera is added automatically by Web3modal
  const bridge = "https://bridge.walletconnect.org/";

  const providerOptions = {
    walletconnect: {
      package: WalletConnectProvider,
      options: {
        //Old, free AW Infura key; leaked many times - you will want to replace this with your own, but it might just work
        infuraId: "da3717f25f824cc1baa32d812386d93f",
      }
    }
  };

  web3Modal = new Web3Modal({
    network: "rinkeby", // optional
    cacheProvider: false, // optional
    disableInjectedProvider: false,
    providerOptions:providerOptions // required
  });

  console.log("Web3Modal instance is", web3Modal);
}


/**
 * Kick in the UI action after Web3modal dialog has chosen a provider
 */
async function fetchAccountData() {

  // Get a Web3 instance for the wallet
  const web3 = new Web3(provider);

  console.log("Web3 instance is", web3);

  // Get connected chain id from Ethereum node
  const chainId = await web3.eth.getChainId();
  // Load chain information over an HTTP API
  const chainData = evmChains.getChain(chainId);
  document.querySelector("#network-name").textContent = chainData.name;

  // Get list of accounts of the connected wallet
  const accounts = await web3.eth.getAccounts();

  // MetaMask does not give you all accounts, only the selected account
  console.log("Got accounts", accounts);
  selectedAccount = accounts[0];

  document.querySelector("#selected-account").textContent = selectedAccount;

  // Get a handl
  const template = document.querySelector("#template-balance");
  const accountContainer = document.querySelector("#accounts");

  // Purge UI elements any previously loaded accounts
  accountContainer.innerHTML = '';

  // Go through all accounts and get their ETH balance
  const rowResolvers = accounts.map(async (address) => {
    const balance = await web3.eth.getBalance(address);
    // ethBalance is a BigNumber instance
    // https://github.com/indutny/bn.js/
    const ethBalance = web3.utils.fromWei(balance, "ether");
    const humanFriendlyBalance = parseFloat(ethBalance).toFixed(4);
    // Fill in the templated row and put in the document
    const clone = template.content.cloneNode(true);
    clone.querySelector(".address").textContent = address;
    clone.querySelector(".balance").textContent = humanFriendlyBalance;
    accountContainer.appendChild(clone);
  });

  // Because rendering account does its own RPC commucation
  // with Ethereum node, we do not want to display any results
  // until data for all accounts is loaded
  await Promise.all(rowResolvers);

  // Display fully loaded UI for wallet data
  document.querySelector("#prepare").style.display = "none";
  document.querySelector("#connected").style.display = "block";
}



/**
 * Fetch account data for UI when
 * - User switches accounts in wallet
 * - User switches networks in wallet
 * - User connects wallet initially
 */
async function refreshAccountData() {

  // If any current data is displayed when
  // the user is switching acounts in the wallet
  // immediate hide this data
  document.querySelector("#connected").style.display = "none";
  document.querySelector("#prepare").style.display = "block";

  // Disable button while UI is loading.
  // fetchAccountData() will take a while as it communicates
  // with Ethereum node via JSON-RPC and loads chain data
  // over an API call.
  document.querySelector("#btn-connect").setAttribute("disabled", "disabled")
  await fetchAccountData(provider);
  document.querySelector("#btn-connect").removeAttribute("disabled")
  document.querySelector("#btn-disconnect").removeAttribute("disabled")
}


/**
 * Connect wallet button pressed.
 */
async function onConnect() {

  console.log("Opening a dialog", web3Modal);
  try {
    provider = await web3Modal.connect();
  } catch(e) {
    console.log("Could not get a wallet connection", e);
    return;
  }

  // Subscribe to accounts change
  provider.on("accountsChanged", (accounts) => {
    fetchAccountData();
  });

  // Subscribe to chainId change
  provider.on("chainChanged", (chainId) => {
    fetchAccountData();
  });

  // Subscribe to networkId change
  provider.on("networkChanged", (networkId) => {
    fetchAccountData();
  });

  await refreshAccountData();
}

/**
 * Disconnect wallet button pressed.
 */
async function onDisconnect() {

  console.log("Killing the wallet connection", provider);

  // TODO: Which providers have close method?
  if(provider.close) {
    await provider.close();

    // If the cached provider is not cleared,
    // WalletConnect will default to the existing session
    // and does not allow to re-scan the QR code with a new wallet.
    // Depending on your use case you may want or want not his behavir.
    await web3Modal.clearCachedProvider();
    provider = null;
  }

  selectedAccount = null;

  // Set the UI back to the initial state
  document.querySelector("#prepare").style.display = "block";
  document.querySelector("#connected").style.display = "none";
}

function hexToBytes(hex) {
  for (var bytes = [], c = 0; c < hex.length; c += 2)
      bytes.push(parseInt(hex.substr(c, 2), 16));
  return bytes;
}

async function onPushPunks() {
  console.log("Push Punks");
  const providerNew = new ethers.providers.Web3Provider(provider); console.log('providernew:', providerNew);
  let factory = new ethers.ContractFactory(abi, hexToBytes(bytecodePunks), providerNew.getSigner());
  let contract = await factory.deploy(); console.log('contract:',contract);
  let data = await contract.deployed();

  console.log("Data:", data);
}

async function onPushMeks() {
	console.log("Push Meks");
	const providerNew = new ethers.providers.Web3Provider(provider); console.log('providernew:', providerNew);
	let factory = new ethers.ContractFactory(abi, hexToBytes(bytecodeMeks), providerNew.getSigner());
	let contract = await factory.deploy(); console.log('contract:',contract);
	let data = await contract.deployed();
  
	console.log("Data:", data);
}

/**
 * Main entry point.
 */
window.addEventListener('load', async () => {
  init();
  document.querySelector("#btn-connect").addEventListener("click", onConnect);
  document.querySelector("#btn-disconnect").addEventListener("click", onDisconnect);
  document.querySelector("#btn-disconnect2").addEventListener("click", onDisconnect);
  document.querySelector("#btn-pushPunks").addEventListener("click", onPushPunks);
  document.querySelector("#btn-pushMeks").addEventListener("click", onPushMeks);
  
});
